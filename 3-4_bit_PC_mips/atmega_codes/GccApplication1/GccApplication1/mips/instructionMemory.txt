#include <avr/io.h>
#define F_CPU 1000000
#include <util/delay.h>

unsigned int instruction[256]={
	0x3023,0x403e,0xd231,0xe234,0xf135,0x1323,0x0331,0xc431,0x9120,0x6441,0x5334,0x9110,0x7131,0x2531,0x8225,0xb352,
	0x9120,0xa31a,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000};



int main(void)
{
	DDRA=0XFF;
	DDRB=0x00;
	DDRC=0xFF;
	DDRD=0xFF;
	
	MCUCSR|=(1<<JTD);
	MCUCSR|=(1<<JTD);
	
	int pc = 0x00;
	int prevclk = 0;
	int currclk = 0;
	int jump = 0;
	int reset = 0;
	int bsel = 0;
	
	/* Replace with your application code */
	while (1) {
		prevclk = currclk;
		char b = PINB;
		currclk = ( b & 0b00000001);
		jump =    ( b & 0b00000010)>>1;
		bsel =    ( b & 0b00000100)>>2;
		reset =   ( b & 0b00001000)>>3;
		
		int ins = instruction[pc];
		
		if(reset==1){
			pc = 0;
		}
		else{
			if(prevclk==1 && currclk==0){
				if(jump==1) pc = (ins>>4)%(1<<8);
				else{
					pc++;
					if(bsel==1){
						int jmpby = ins%(1<<4);
						if(jmpby>=8) pc+=jmpby-16;
						else pc+=jmpby;
					}
				}
			}
		}
		pc%=256;
		
		unsigned char c;
		c = (instruction[pc]%(1<<8))&(0xff);
		PORTA = c;
		c = ((instruction[pc])>>8)&(0xff);
		PORTC = c;
		c = pc & (0xff);
		PORTD = c;
		_delay_ms(10);
	}
}
//InstructionMemory